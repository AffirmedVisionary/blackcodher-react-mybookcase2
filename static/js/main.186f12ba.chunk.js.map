{"version":3,"sources":["components/Header.js","components/Footer.js","pages/Search.js","components/Book.js","components/BookList.js","pages/About.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["Header","Fragment","className","to","Footer","href","Search","props","onSubmit","event","console","log","preventDefault","findBooks","keyword","authorKeyword","titleKeyword","subjectKeyword","setKeyword","setAuthorKeyword","setTitleKeyword","setSubjectKeyword","type","value","onChange","e","target","Book","book","id","volumeInfo","title","authors","description","smallThumbnail","imageLinks","listPrice","saleInfo","src","alt","addBook","onClick","removeBook","amount","defaultProps","BookList","useState","activePage","setCurrentPage","indexOfLastBook","indexOfFirstBook","renderBooks","books","slice","map","key","itemsCountPerPage","totalItemsCount","length","pageRangeDisplayed","pageNumber","About","Home","App","data","setBooks","bookcase","setBookcase","newBookList","filter","chosenBook","newBookcaseList","authorValue","titleValue","subjectValue","a","url","fetch","then","res","json","results","items","useEffect","document","basename","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.186f12ba.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport \"./header.css\"\r\n\r\nfunction Header() {\r\n    return(\r\n        <React.Fragment>\r\n           <div className=\"header\">\r\n            <h1>My Bookcase</h1>\r\n            <Link to='/' className=\"bookLink\">Home</Link>\r\n            <Link to=\"/pages/About\" className=\"bookLink\">About</Link>\r\n            <Link to='/pages/Search' className=\"bookLink\">Search</Link>\r\n            <Link to=\"/bookcase\" className=\"bookLink\">Bookcase</Link>\r\n            <br></br>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport '../components/footer.css'\r\n\r\nfunction Footer() {\r\n    return(\r\n        <React.Fragment>\r\n           <div className=\"footer\">\r\n            <hr />\r\n                <h3><u>Project Links</u></h3>\r\n                <div className=\"projectLinks\">\r\n                <a href=\"https://affirmedvisionary.github.io/blackcodher-bootcamp/\">Contents</a>\r\n                <a href=\"https://affirmedvisionary.github.io/blackcodher-bootcamp/html/portfolio/index.html\">Personal Profile</a>\r\n                <a href=\"https://affirmedvisionary.github.io/blackcodher-bootcamp/html/bookshop/index.html\">Book Shop</a>\r\n                <a href=\"https://affirmedvisionary.github.io/blackcodher-bootcamp/javascript/quiz-along/index.html\">Simple Quiz</a>\r\n                <a href=\"https://affirmedvisionary.github.io/blackcodher-react-mybookcase2/\">My Bookcase</a>\r\n                </div>\r\n                <p className=\"copyright\"><Link to=\"mailto:iam@charlenegrant.co.uk\">Charlene Grant</Link> 2020</p>\r\n                </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react';\r\n\r\nconst Search = (props) => {\r\n\r\nfunction handleSubmit(event) {\r\n    console.log(event)\r\n    event.preventDefault();\r\n    props.findBooks(props.keyword, props.authorKeyword, props.titleKeyword, props.subjectKeyword);\r\n    props.setKeyword(\"\");\r\n    props.setAuthorKeyword(\"\");\r\n    props.setTitleKeyword(\"\");\r\n    props.setSubjectKeyword(\"\");\r\n}\r\n\r\n    return (\r\n    <form className=\"search-form\" onSubmit={handleSubmit}>\r\n        <label>Search </label>\r\n        <input type=\"text\" value={props.keyword} onChange={(e) => props.setKeyword(e.target.value)} />\r\n        <label>Search Author </label>\r\n        <input type=\"text\" value={props.authorKeyword} onChange={(e) => props.setAuthorKeyword(e.target.value)} />\r\n        <label>Search Title </label>\r\n        <input type=\"text\" value={props.titleKeyword} onChange={(e) => props.setTitleKeyword(e.target.value)} />\r\n        <label>Search Subject </label>\r\n        <input type=\"text\" value={props.subjectKeyword} onChange={(e) => props.setSubjectKeyword(e.target.value)} />\r\n        <button>Submit</button>\r\n    </form>\r\n    )\r\n}\r\n\r\nexport default Search","import React from 'react';\r\nimport '../components/book.css'\r\nimport PropTypes from 'prop-types'\r\n// import addBook from '../App'\r\n// import Book from '../models/books.json'\r\n\r\nconst Book = (props) => {\r\n\r\n    let {id, volumeInfo: {title, authors, description, imageLinks:{smallThumbnail}},\r\n        saleInfo:{listPrice}} \r\n        = props.book;\r\n   \r\n\r\n        // let amount = () => {\r\n        //     if (saleInfo.retailPrice) {\r\n        //         let amount = saleInfo.retailPrice.amount;\r\n        //         return amount\r\n        //     }else {\r\n        //         let amount = 'No Amount Set'; \r\n        //         return amount\r\n        //     }\r\n        // };\r\n \r\n        // let url = () => {\r\n        // if (imageLinks) {\r\n        //     let url = imageLinks.smallThumbnail;\r\n        //     return url;\r\n        // } else {\r\n        //     let url = 'image not available';\r\n        //     return url;\r\n        // }\r\n        // };\r\n\r\n    return (\r\n        <div className='book'>\r\n            <span className=\"imgPriceAdd\">\r\n            <img src= {smallThumbnail} alt={title}/>\r\n            {props.addBook && (\r\n                <button className=\"addRemoveBtn\" onClick={() => props.addBook(title, id)}>Add +</button>\r\n            )}\r\n            {props.removeBook && (\r\n                <button className=\"addRemoveBtn\" onClick={() => props.removeBook(id)}>Remove</button>\r\n            )}            \r\n            </span>\r\n            <h2 className=\"bookTitle\">{title}</h2>\r\n            <h3 className=\"bookAuthor\">by {authors}</h3>\r\n            <p className=\"bookPrice\">£{listPrice && listPrice.amount}</p>\r\n            <p className=\"bookDescription\">{description}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nBook.propTypes = {\r\n    volumeInfo: PropTypes.shape(\r\n        {title: PropTypes.string.isRequired,\r\n        authors: PropTypes.array,\r\n        description: PropTypes.string,\r\n        imageLinks: PropTypes.shape(\r\n            {thumbnail: PropTypes.string, \r\n            smallThumbnail: PropTypes.string})\r\n        }),\r\n        saleInfo: PropTypes.shape({listPrice: PropTypes.shape({amount: PropTypes.number})})\r\n   };\r\n\r\n   Book.defaultProps ={\r\n       authors: \"No Known Authors\"\r\n   }\r\n   \r\n\r\nexport default Book;","import Book from './Book';\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport '../components/bookList.css'\r\n// import data from './models/books.json';\r\n// import logo from './logo.svg';\r\n// import './App.css';\r\n\r\nconst BookList = (props) => {\r\n  const booksPerPage = 8\r\n  const [ activePage, setCurrentPage ] = useState( 1 )\r\n  const indexOfLastBook  = activePage * booksPerPage;\r\n  const indexOfFirstBook = indexOfLastBook - booksPerPage;\r\n  const currentBooks = props.books.slice( indexOfFirstBook, indexOfLastBook );\r\n  const renderBooks = currentBooks.map( ( book) => {\r\n    return <Book key={book.id} book={book} addBook={props.addBook} removeBook={props.removeBook}/>\r\n } );\r\n  const handlePageChange = ( pageNumber ) => {\r\n    console.log( `active page is ${ pageNumber }` );\r\n    setCurrentPage( pageNumber )\r\n };\r\n  return (\r\n    <>\r\n    {renderBooks}\r\n        <div className=\"pagination\">\r\n            <Pagination\r\n               activePage={ activePage }\r\n               itemsCountPerPage={ 3 }\r\n               totalItemsCount={ props.books.length }\r\n               pageRangeDisplayed={ 3 }\r\n               onChange={ handlePageChange }\r\n            />\r\n         </div>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default BookList;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport '../pages/about.css'\r\n\r\nfunction About() {\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"aboutUs\">\r\n        <div className=\"hero-text\">\r\n          <h1>Welcome to the Bookcase</h1>\r\n          <h3>This application was made by Charlene Grant</h3>\r\n          <p>The app displays a list of books to the user and allows them to save their favourites to a local bookcase</p>\r\n            <p>Click on the Add button to save a book to your bookcase. You can also search by name, author and description</p>\r\n        <Link to=\"/pages/Search\" className=\"aboutButton\">\r\n            <button className=\"aboutButton\">Look For A Book!</button>\r\n        </Link>\r\n      </div>\r\n      </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default About","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport '../pages/home.css'\r\n// import Header from '../components/Header'\r\n\r\nfunction Home() {\r\n    return (\r\n        <React.Fragment>\r\n        <div className=\"home\">\r\n         <div className=\"hero-text\">\r\n            <h1>The Bookcase</h1>\r\n            <Link to=\"/pages/About\" className=\"bookLink\"><button className=\"aboutButton\">About</button></Link>\r\n            <Link to='/pages/Search' className=\"bookLink\"><button className=\"aboutButton\">Search</button></Link>\r\n            <Link to=\"/bookcase\" className=\"bookLink\"><button className=\"aboutButton\">Bookcase</button></Link>\r\n         </div>\r\n        </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Home","import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport Search from './pages/Search';\r\nimport BookList from './components/BookList';\r\nimport data from './models/books.json';\r\nimport About from './pages/About';\r\nimport Home from './pages/Home';\r\n// import logo from './logo.svg';\r\n// import './App.css';\r\n\r\nconst App = (props) => {\r\n  const [books, setBooks] = useState(data);\r\n  const [keyword, setKeyword] = useState('');\r\n  const [authorKeyword, setAuthorKeyword] = useState('');\r\n  const [subjectKeyword, setSubjectKeyword] = useState('');\r\n  const [titleKeyword, setTitleKeyword] = useState('');\r\n  const [bookcase, setBookcase] = useState([]);\r\nconsole.log(titleKeyword)\r\n  function addBook (title, id) {\r\n    const newBookList = books.filter(book => book.id !== id);\r\n    const chosenBook = books.filter(book => book.id === id);\r\n    setBooks(newBookList);\r\n    setBookcase([...bookcase, ...chosenBook]);\r\n  console.log(`The Book ${title} with the id of ${id} was added. there is now ${bookcase.length + 1} books on your shelf`);\r\n }\r\n\r\n function removeBook(id) {\r\n   const newBookcaseList = bookcase.filter(book => book.id !== id);\r\n   setBookcase(newBookcaseList);\r\n   console.log(`The Book with the id of ${id} was removed. there is now ${bookcase.length - 1} books on your shelf`);\r\n }\r\n\r\n useEffect(() => {\r\n  document.title = `${bookcase.length} books in bookcase`;\r\n}, [bookcase]);\r\n\r\nasync function findBooks(value, authorValue, titleValue, subjectValue) {\r\n  let url;\r\n\r\n\tif(titleValue){\r\n\t\turl = `https://www.googleapis.com/books/v1/volumes?q=${value}+intitle:${titleValue}&maxResults=40`\r\n\t} else if (authorValue) {\r\n\t\turl = `https://www.googleapis.com/books/v1/volumes?q=${value}+inauthor:${authorValue}&maxResults=40`\r\n\t} else if (subjectValue) {\r\n\t\turl = `https://www.googleapis.com/books/v1/volumes?q=${value}+subject:${subjectValue}&maxResults=40`\r\n\t} else {\r\n\t\turl = `https://www.googleapis.com/books/v1/volumes?q=${value}&maxResults=40`\r\n  }\r\n  console.log(url);\r\n  const results = await\r\nfetch(\r\n  url\r\n).then(res => res.json());\r\nconsole.log(results)\r\nsetBooks(results.items)\r\n}\r\n\r\n  return (\r\n    <>    \r\n    <Router basename='blackcodher-react-mybookcase2'>\r\n      <Route exact path=\"/\" render= {() => (\r\n        <React.Fragment>\r\n          <Home />\r\n          <Footer />\r\n        </React.Fragment>\r\n      )} />\r\n            <Route exact path=\"/pages/Search\" render= {() => (\r\n        <React.Fragment>\r\n          <Header />\r\n          <div>\r\n            <h2>You have {bookcase.length} book(s) on your shelf</h2>\r\n          </div>\r\n          <Search findBooks={findBooks} keyword={keyword} setKeyword={setKeyword} authorKeyword={authorKeyword} setAuthorKeyword={setAuthorKeyword} subjectKeyword={subjectKeyword} setSubjectKeyword={setSubjectKeyword} titleKeyword={titleKeyword} setTitleKeyword={setTitleKeyword}\r\n          />\r\n          <br></br>\r\n          <BookList books={books} addBook={addBook} />\r\n          <Footer />\r\n        </React.Fragment>\r\n      )} />\r\n            <Route exact path=\"/pages/About\" render= {() => (\r\n        <React.Fragment>\r\n          <Header /> \r\n          <div>\r\n            <h2>You have {bookcase.length} book(s) on your shelf</h2>\r\n          </div>\r\n          <About />\r\n          <Footer />\r\n        </React.Fragment>\r\n      )} />\r\n            <Route exact path=\"/bookcase\" render= {() => (\r\n        <React.Fragment>\r\n          <Header />\r\n          <div>\r\n            <h2>You have {bookcase.length} book(s) on your shelf</h2>\r\n          </div>\r\n          <BookList books={bookcase} removeBook={removeBook}/>\r\n          <Footer />\r\n        </React.Fragment>\r\n      )} />\r\n    </Router>\r\n    </>\r\n  )\r\n }\r\n\r\n// function App() {\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <header className=\"App-header\">\r\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n//         <p>\r\n//           Edit <code>src/App.js</code> and save to reload.\r\n//         </p>\r\n//         <a\r\n//           className=\"App-link\"\r\n//           href=\"https://reactjs.org\"\r\n//           target=\"_blank\"\r\n//           rel=\"noopener noreferrer\"\r\n//         >\r\n//           Learn React\r\n//         </a>\r\n//       </header>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css'\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}